# Sample configuration file
# Lines starting with '#' are ignored

# BE CAREFUL TO REMOVE ALL TRAILING WHITESPACE

###################
# Global Settings #
###################

# These are optional, and are only used to display information during conversion
GAMENAME=My Super Nintendo Game
PACKNAME=My Hi-Def Audio Pack
ARTIST=qwertymodo
URL=https://github.com/qwertymodo/msupcm

# Optional, used to determine which tracks to process below, defaults to 1
#FIRSTTRACK=1

# Required, used to determine which tracks to process below
LASTTRACK=10

# Optional, allows you to specify the input filename pattern globally instead
# of having to specify a TRACKnFILE parameter for each file
# e.g. for input files my_pack-1.wav, my_pack-2.wav, . . . my_pack_10.wav
#TRACKPREFIX=my_pack
#INPUTFILETYPE=wav

# Optional, specify the output file name prefix.  For higan, this should be 'track'
# for bsnes/SD2SNES/Snes9x this should be the same as the ROM file name
OUTPUTPREFIX=track

# Required, specifies the global normalization level in dBFS, RMS.  Can be overridden
NORMALIZATION=-12

# Optional, additional effects to be passed to sox.  See http://sox.sourceforge.net/sox.html#EFFECTS
#EFFECTS=dither -s

######################
# Per-Track Settings #
######################

##########
# Parameter descriptions listed here, see below for full examples
#
# TRACKnFILE
#   Optional if global TRACKPREFIX/TRACKTYPE are specified, otherwise required
#   Specifies the input file for the track, overrides global TRACKPREFIX-n.TRACKTYPE
#
# TRACKnTITLE
#   Optional track title, used for output filename if global OUTPUTPREFIX is not specified
#   Defaults to input file name
#
# TRACKnSTART
#   Optional rack starting point, in samples.  Defaults to 0.  Note that all sample numbers are
#   based off of a 44.1kHz sample rate so any input files with a different sample rate must adjust
#   their sample numbers accordingly
#
# TRACKnLOOP
#   Optional track loop point, in samples.  Defaults to TRACKnSTART.  This value is the absolute sample
#   number in the original input file, so there is no need to recalculate if the TRACKnSTART or TRACKnPAD
#   parameters are specified
#
# TRACKnTRIM
#   Optional track end point, in samples
#
# TRACKnCROSSFADE
#   Optional length of cross-fade effect to apply, in samples
#
# TRACKnSTARTPAD
#   Optional length of silence to add to the beginning of the track, in samples
#
# TRACKnNORMALIZATION
#   Optional per-track normalization level, in dBFS, RMS.  Overrides global NORMALIZATION
#
# TRACKnEFFECTS
#   Optional, per-track effects to be passed to sox, in addition to global EFFECTS
#
# TRACKnFORMAT
#   Optional, input file format specification if sox can't automatically determine the file format.
#   Not well-tested, probably should not be used.  See http://sox.sourceforge.net/sox.html for format-options
#   Probably just easier to convert the input file into .wav or .flac before processing with this script
#
# TRACKnINTROFILE
#   Optional, concatenate a separate intro file.  Concatenation occurs after all processing of the main
#   track file is complete.
#
# TRACKnINTROLENGTH
#   Required if using INTROFILE.  Specifies the length of the intro file in samples
#
# TRACKnINTRONORMALIZATION
#   Optional, allows the intro file to be normalized to a different level than the main track.  Defaults
#   to TRACKnNORMALIZATION
#
# TRACKnRENDERLOOPS
#   Optional, instead of creating an infinitely looping file, render a fixed number of loops
#
# TRACKnFADEIN
#   Optional, fade in from the beginning of the track, length specified in samples
#
# TRACKnFADEOUT
#   Optional, fade out at the end of the track, length specified in samples
##########

############
# Examples #
############

# Track is converted with no trimming and no loop point
TRACK1FILE=track_1.wav

# Track ends at sample 20000 and loops back to sample 12345
TRACK2FILE=track_2.wav
TRACK2LOOP=12345
TRACK2TRIMP=20000

# Track starts at sample 10000 and ends at sample 50000, then loops back to sample 25000 with a
# 2000 sample cross-fade applied.  Track is normalized to -6dBFS, RMS
TRACK3FILE=track_3.wav
TRACK3START=10000
TRACK3LOOP=25000
TRACK3TRIM=50000
TRACK3CROSSFADE=2000
TRACK3NORMALIZATION=-6

# Track starts at sample 50000.  Notice that this is AFTER the loop point at sample 20000, which is
# just fine.  It is also possible to include a crossfade in this scenario.  The track will be converted
# as if the song started at the loop point, applying the crossfade, then it moves the samples from the
# start of the track up to the specified start point to the end of the track.  The looping still comes
# out the same, but it allows the track to start at what would have been the middle of the loop
TRACK4FILE=track_4.wav
TRACK4START=50000
TRACK4LOOP=20000
TRACK4TRIM=100000
TRACK4CROSSFADE=5000

# Same as example 2, but the title that is displayed, as well as the output file, will both be track_5
TRACK5FILE=some_other_random_track.flac
TRACK5TITLE=track_5
TRACK5LOOP=12345
TRACK5TRIM=20000

# Apply simple dither effect.  The entire TRACKnEFFECTS parameter, along with the global EFFECTS
# parameter, gets passed directly to the end of the call to sox
TRACK6FILE=track_6.wav
TRACK6LOOP=12345
TRACK6TRIM=20000
TRACK6EFFECTS=dither -s

# Same as example 2 with an intro file.  Final track will be 70000 samples long, and will loop to sample 62345
TRACK7FILE=track_7.wav
TRACK7INTROFILE=track_7_intro.wav
TRACK7INTROLENGTH=50000
TRACK7LOOP=12345
TRACK7TRIM=20000

# Renders a file containing samples 0-10000, 3 copies of the loop from sample 10000-20000, and sample 20000-end
TRACK8FILE=track_8.wav
TRACK8LOOP=10000
TRACK8TRIM=20000
TRACK8RENDERLOOPS=3

# Fade in and out, 10000 samples each
TRACK9FILE=track_9.wav
TRACK9TRIM=30000
TRACK9FADEIN=10000
TRACK9FADEOUT=10000
